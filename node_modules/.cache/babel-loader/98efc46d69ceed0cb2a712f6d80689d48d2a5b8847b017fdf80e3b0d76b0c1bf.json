{"ast":null,"code":"const API_BASE=\"https://task.tickadoo.com/api/task\";export async function login(username,password){const res=await fetch(\"\".concat(API_BASE,\"/login\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password})});if(!res.ok)throw new Error(\"Authentication failed.\");return res.json();}export async function register(username,password){const res=await fetch(\"\".concat(API_BASE,\"/register\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password})});if(!res.ok)throw new Error(\"Registration failed.\");return res.json();}export async function refreshToken(refreshToken){const res=await fetch(\"\".concat(API_BASE,\"/refresh\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({refreshToken})});if(!res.ok)throw new Error(\"Token refresh failed.\");return res.json();}export async function testApi(accessToken){const res=await fetch(\"\".concat(API_BASE,\"/test\"),{method:\"GET\",headers:{Authorization:\"Bearer \".concat(accessToken)}});return res;}","map":{"version":3,"names":["API_BASE","login","username","password","res","fetch","concat","method","headers","body","JSON","stringify","ok","Error","json","register","refreshToken","testApi","accessToken","Authorization"],"sources":["/Users/cristinadobre/Legacy/tickadoo-task/src/authApi.ts"],"sourcesContent":["const API_BASE = \"https://task.tickadoo.com/api/task\";\n\nexport async function login(username: string, password: string) {\n    const res = await fetch(`${API_BASE}/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n    });\n    if (!res.ok) throw new Error(\"Authentication failed.\");\n    return res.json();\n}\n\nexport async function register(username: string, password: string) {\n    const res = await fetch(`${API_BASE}/register`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n    });\n    if (!res.ok) throw new Error(\"Registration failed.\");\n    return res.json();\n}\n\nexport async function refreshToken(refreshToken: string) {\n    const res = await fetch(`${API_BASE}/refresh`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ refreshToken }),\n    });\n    if (!res.ok) throw new Error(\"Token refresh failed.\");\n    return res.json();\n}\n\nexport async function testApi(accessToken: string) {\n    const res = await fetch(`${API_BASE}/test`, {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${accessToken}` },\n    });\n    return res;\n}"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,oCAAoC,CAErD,MAAO,eAAe,CAAAC,KAAKA,CAACC,QAAgB,CAAEC,QAAgB,CAAE,CAC5D,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,WAAU,CACzCO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAET,QAAQ,CAAEC,QAAS,CAAC,CAC/C,CAAC,CAAC,CACF,GAAI,CAACC,GAAG,CAACQ,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CACtD,MAAO,CAAAT,GAAG,CAACU,IAAI,CAAC,CAAC,CACrB,CAEA,MAAO,eAAe,CAAAC,QAAQA,CAACb,QAAgB,CAAEC,QAAgB,CAAE,CAC/D,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,cAAa,CAC5CO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAET,QAAQ,CAAEC,QAAS,CAAC,CAC/C,CAAC,CAAC,CACF,GAAI,CAACC,GAAG,CAACQ,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CACpD,MAAO,CAAAT,GAAG,CAACU,IAAI,CAAC,CAAC,CACrB,CAEA,MAAO,eAAe,CAAAE,YAAYA,CAACA,YAAoB,CAAE,CACrD,KAAM,CAAAZ,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,aAAY,CAC3CO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEK,YAAa,CAAC,CACzC,CAAC,CAAC,CACF,GAAI,CAACZ,GAAG,CAACQ,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CACrD,MAAO,CAAAT,GAAG,CAACU,IAAI,CAAC,CAAC,CACrB,CAEA,MAAO,eAAe,CAAAG,OAAOA,CAACC,WAAmB,CAAE,CAC/C,KAAM,CAAAd,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,UAAS,CACxCO,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAEW,aAAa,WAAAb,MAAA,CAAYY,WAAW,CAAG,CACtD,CAAC,CAAC,CACF,MAAO,CAAAd,GAAG,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}