{"ast":null,"code":"var _jsxFileName = \"/Users/cristinadobre/Legacy/tickadoo-task/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { SignInDialog } from \"./SignInDialog/SignInDialog.tsx\";\nimport { TestTokenDialog } from \"./TestTokenDialog.tsx\";\nimport { LogoutDialog } from \"./LogoutDialog/LogoutDialog.jsx\";\nimport { mainTexts } from \"./main.texts.ts\";\nimport \"./main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [isSignInOpen, setIsSignInOpen] = useState(false);\n  const [authStatus, setAuthStatus] = useState(mainTexts.notAuthenticated);\n  const [isTestDialogOpen, setIsTestDialogOpen] = useState(false);\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [refreshTokenValue, setRefreshTokenValue] = useState(\"\");\n  const [showLogoutDialog, setShowLogoutDialog] = useState(false);\n  const isAuthenticated = !!accessToken;\n  const handleSignInClick = () => {\n    if (isAuthenticated) {\n      setShowLogoutDialog(true);\n    } else {\n      setIsSignInOpen(true);\n    }\n  };\n  const handleCloseSignIn = () => {\n    setIsSignInOpen(false);\n  };\n  const handleAuthSuccess = response => {\n    var _response$accessToken;\n    setAuthStatus(\"\".concat(mainTexts.authenticatedWithToken).concat((_response$accessToken = response.accessToken) === null || _response$accessToken === void 0 ? void 0 : _response$accessToken.substring(0, 20), \"...\"));\n    setAccessToken(response.accessToken);\n    setRefreshTokenValue(response.refreshToken);\n    setIsSignInOpen(false);\n    setIsTestDialogOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [mainTexts.status, \": \", authStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"sign-in-button\",\n      onClick: handleSignInClick,\n      children: isAuthenticated ? mainTexts.logout : mainTexts.signIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignInDialog, {\n      isOpen: isSignInOpen,\n      onClose: handleCloseSignIn,\n      onAuthSuccess: handleAuthSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestTokenDialog, {\n      isOpen: isTestDialogOpen,\n      accessToken: accessToken,\n      refreshTokenValue: refreshTokenValue,\n      onClose: () => setIsTestDialogOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutDialog, {\n      isOpen: showLogoutDialog,\n      onClose: () => setShowLogoutDialog(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r8WNyFs2Q/qFchsa0LmEhPhLnBk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","SignInDialog","TestTokenDialog","LogoutDialog","mainTexts","jsxDEV","_jsxDEV","App","_s","isSignInOpen","setIsSignInOpen","authStatus","setAuthStatus","notAuthenticated","isTestDialogOpen","setIsTestDialogOpen","accessToken","setAccessToken","refreshTokenValue","setRefreshTokenValue","showLogoutDialog","setShowLogoutDialog","isAuthenticated","handleSignInClick","handleCloseSignIn","handleAuthSuccess","response","_response$accessToken","concat","authenticatedWithToken","substring","refreshToken","className","children","status","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","logout","signIn","isOpen","onClose","onAuthSuccess","_c","$RefreshReg$"],"sources":["/Users/cristinadobre/Legacy/tickadoo-task/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { SignInDialog } from \"./SignInDialog/SignInDialog.tsx\";\nimport { TestTokenDialog } from \"./TestTokenDialog.tsx\";\nimport { LogoutDialog } from \"./LogoutDialog/LogoutDialog.jsx\";\nimport { mainTexts } from \"./main.texts.ts\";\nimport \"./main.css\";\n\nexport default function App() {\n  const [isSignInOpen, setIsSignInOpen] = useState(false);\n  const [authStatus, setAuthStatus] = useState(mainTexts.notAuthenticated);\n  const [isTestDialogOpen, setIsTestDialogOpen] = useState(false);\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [refreshTokenValue, setRefreshTokenValue] = useState(\"\");\n  const [showLogoutDialog, setShowLogoutDialog] = useState(false);\n\n  const isAuthenticated = !!accessToken;\n\n  const handleSignInClick = () => {\n    if (isAuthenticated) {\n      setShowLogoutDialog(true);\n    } else {\n      setIsSignInOpen(true);\n    }\n  };\n\n  const handleCloseSignIn = () => {\n    setIsSignInOpen(false);\n  };\n\n  const handleAuthSuccess = (response) => {\n    setAuthStatus(\n      `${mainTexts.authenticatedWithToken}${response.accessToken?.substring(0, 20)}...`\n    );\n    setAccessToken(response.accessToken);\n    setRefreshTokenValue(response.refreshToken);\n    setIsSignInOpen(false);\n    setIsTestDialogOpen(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <h3>{mainTexts.status}: {authStatus}</h3>\n\n      <button type=\"button\" className=\"sign-in-button\" onClick={handleSignInClick}>\n        {isAuthenticated ? mainTexts.logout : mainTexts.signIn}\n      </button>\n\n      <SignInDialog\n        isOpen={isSignInOpen}\n        onClose={handleCloseSignIn}\n        onAuthSuccess={handleAuthSuccess}\n      />\n      <TestTokenDialog\n        isOpen={isTestDialogOpen}\n        accessToken={accessToken}\n        refreshTokenValue={refreshTokenValue}\n        onClose={() => setIsTestDialogOpen(false)}\n      />\n      <LogoutDialog\n        isOpen={showLogoutDialog}\n        onClose={() => setShowLogoutDialog(false)}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}