{"ast":null,"code":"import{useState}from\"react\";import{SignInDialog}from\"./SignInDialog/SignInDialog.tsx\";import{TestTokenDialog}from\"./TestTokenDialog.tsx\";import{LogoutDialog}from\"./LogoutDialog/LogoutDialog.jsx\";import{mainTexts}from\"./main.texts.ts\";import\"./main.css\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export default function App(){const[isSignInOpen,setIsSignInOpen]=useState(false);const[authStatus,setAuthStatus]=useState(mainTexts.notAuthenticated);const[isTestDialogOpen,setIsTestDialogOpen]=useState(false);const[accessToken,setAccessToken]=useState(\"\");const[refreshTokenValue,setRefreshTokenValue]=useState(\"\");const[showLogoutDialog,setShowLogoutDialog]=useState(false);const isAuthenticated=!!accessToken;const handleSignInClick=()=>{if(isAuthenticated){setShowLogoutDialog(true);}else{setIsSignInOpen(true);}};const handleCloseSignIn=()=>{setIsSignInOpen(false);};const handleAuthSuccess=response=>{var _response$accessToken;setAuthStatus(\"\".concat(mainTexts.authenticatedWithToken).concat((_response$accessToken=response.accessToken)===null||_response$accessToken===void 0?void 0:_response$accessToken.substring(0,20),\"...\"));setAccessToken(response.accessToken);setRefreshTokenValue(response.refreshToken);setIsSignInOpen(false);setIsTestDialogOpen(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[mainTexts.status,\": \",authStatus]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sign-in-button\",onClick:handleSignInClick,children:isAuthenticated?mainTexts.logout:mainTexts.signIn}),/*#__PURE__*/_jsx(SignInDialog,{isOpen:isSignInOpen,onClose:handleCloseSignIn,onAuthSuccess:handleAuthSuccess}),/*#__PURE__*/_jsx(TestTokenDialog,{isOpen:isTestDialogOpen,accessToken:accessToken,refreshTokenValue:refreshTokenValue,onClose:()=>setIsTestDialogOpen(false)}),/*#__PURE__*/_jsx(LogoutDialog,{isOpen:showLogoutDialog,onClose:()=>setShowLogoutDialog(false)})]});}","map":{"version":3,"names":["useState","SignInDialog","TestTokenDialog","LogoutDialog","mainTexts","jsxs","_jsxs","jsx","_jsx","App","isSignInOpen","setIsSignInOpen","authStatus","setAuthStatus","notAuthenticated","isTestDialogOpen","setIsTestDialogOpen","accessToken","setAccessToken","refreshTokenValue","setRefreshTokenValue","showLogoutDialog","setShowLogoutDialog","isAuthenticated","handleSignInClick","handleCloseSignIn","handleAuthSuccess","response","_response$accessToken","concat","authenticatedWithToken","substring","refreshToken","className","children","status","type","onClick","logout","signIn","isOpen","onClose","onAuthSuccess"],"sources":["/Users/cristinadobre/Legacy/tickadoo-task/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { SignInDialog } from \"./SignInDialog/SignInDialog.tsx\";\nimport { TestTokenDialog } from \"./TestTokenDialog.tsx\";\nimport { LogoutDialog } from \"./LogoutDialog/LogoutDialog.jsx\";\nimport { mainTexts } from \"./main.texts.ts\";\nimport \"./main.css\";\n\nexport default function App() {\n  const [isSignInOpen, setIsSignInOpen] = useState(false);\n  const [authStatus, setAuthStatus] = useState(mainTexts.notAuthenticated);\n  const [isTestDialogOpen, setIsTestDialogOpen] = useState(false);\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [refreshTokenValue, setRefreshTokenValue] = useState(\"\");\n  const [showLogoutDialog, setShowLogoutDialog] = useState(false);\n\n  const isAuthenticated = !!accessToken;\n\n  const handleSignInClick = () => {\n    if (isAuthenticated) {\n      setShowLogoutDialog(true);\n    } else {\n      setIsSignInOpen(true);\n    }\n  };\n\n  const handleCloseSignIn = () => {\n    setIsSignInOpen(false);\n  };\n\n  const handleAuthSuccess = (response) => {\n    setAuthStatus(\n      `${mainTexts.authenticatedWithToken}${response.accessToken?.substring(0, 20)}...`\n    );\n    setAccessToken(response.accessToken);\n    setRefreshTokenValue(response.refreshToken);\n    setIsSignInOpen(false);\n    setIsTestDialogOpen(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <h3>{mainTexts.status}: {authStatus}</h3>\n\n      <button type=\"button\" className=\"sign-in-button\" onClick={handleSignInClick}>\n        {isAuthenticated ? mainTexts.logout : mainTexts.signIn}\n      </button>\n\n      <SignInDialog\n        isOpen={isSignInOpen}\n        onClose={handleCloseSignIn}\n        onAuthSuccess={handleAuthSuccess}\n      />\n      <TestTokenDialog\n        isOpen={isTestDialogOpen}\n        accessToken={accessToken}\n        refreshTokenValue={refreshTokenValue}\n        onClose={() => setIsTestDialogOpen(false)}\n      />\n      <LogoutDialog\n        isOpen={showLogoutDialog}\n        onClose={() => setShowLogoutDialog(false)}\n      />\n    </div>\n  );\n}\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,YAAY,KAAQ,iCAAiC,CAC9D,OAASC,eAAe,KAAQ,uBAAuB,CACvD,OAASC,YAAY,KAAQ,iCAAiC,CAC9D,OAASC,SAAS,KAAQ,iBAAiB,CAC3C,MAAO,YAAY,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEpB,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAACI,SAAS,CAACU,gBAAgB,CAAC,CACxE,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACiB,WAAW,CAAEC,cAAc,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACmB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACqB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGtB,QAAQ,CAAC,KAAK,CAAC,CAE/D,KAAM,CAAAuB,eAAe,CAAG,CAAC,CAACN,WAAW,CAErC,KAAM,CAAAO,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAID,eAAe,CAAE,CACnBD,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAC,IAAM,CACLX,eAAe,CAAC,IAAI,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAc,iBAAiB,CAAGA,CAAA,GAAM,CAC9Bd,eAAe,CAAC,KAAK,CAAC,CACxB,CAAC,CAED,KAAM,CAAAe,iBAAiB,CAAIC,QAAQ,EAAK,KAAAC,qBAAA,CACtCf,aAAa,IAAAgB,MAAA,CACRzB,SAAS,CAAC0B,sBAAsB,EAAAD,MAAA,EAAAD,qBAAA,CAAGD,QAAQ,CAACV,WAAW,UAAAW,qBAAA,iBAApBA,qBAAA,CAAsBG,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,OAC9E,CAAC,CACDb,cAAc,CAACS,QAAQ,CAACV,WAAW,CAAC,CACpCG,oBAAoB,CAACO,QAAQ,CAACK,YAAY,CAAC,CAC3CrB,eAAe,CAAC,KAAK,CAAC,CACtBK,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAED,mBACEV,KAAA,QAAK2B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB5B,KAAA,OAAA4B,QAAA,EAAK9B,SAAS,CAAC+B,MAAM,CAAC,IAAE,CAACvB,UAAU,EAAK,CAAC,cAEzCJ,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,gBAAgB,CAACI,OAAO,CAAEb,iBAAkB,CAAAU,QAAA,CACzEX,eAAe,CAAGnB,SAAS,CAACkC,MAAM,CAAGlC,SAAS,CAACmC,MAAM,CAChD,CAAC,cAET/B,IAAA,CAACP,YAAY,EACXuC,MAAM,CAAE9B,YAAa,CACrB+B,OAAO,CAAEhB,iBAAkB,CAC3BiB,aAAa,CAAEhB,iBAAkB,CAClC,CAAC,cACFlB,IAAA,CAACN,eAAe,EACdsC,MAAM,CAAEzB,gBAAiB,CACzBE,WAAW,CAAEA,WAAY,CACzBE,iBAAiB,CAAEA,iBAAkB,CACrCsB,OAAO,CAAEA,CAAA,GAAMzB,mBAAmB,CAAC,KAAK,CAAE,CAC3C,CAAC,cACFR,IAAA,CAACL,YAAY,EACXqC,MAAM,CAAEnB,gBAAiB,CACzBoB,OAAO,CAAEA,CAAA,GAAMnB,mBAAmB,CAAC,KAAK,CAAE,CAC3C,CAAC,EACC,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}