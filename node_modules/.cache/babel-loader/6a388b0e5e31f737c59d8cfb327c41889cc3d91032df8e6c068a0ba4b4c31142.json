{"ast":null,"code":"const API_BASE = \"https://task.tickadoo.com/api/task\";\nexport async function login(username, password) {\n  const res = await fetch(\"\".concat(API_BASE, \"/login\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!res.ok) throw new Error(\"Authentication failed.\");\n  return res.json();\n}\nexport async function register(username, password) {\n  const res = await fetch(\"\".concat(API_BASE, \"/register\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!res.ok) throw new Error(\"Registration failed.\");\n  return res.json();\n}\nexport async function refreshToken(refreshToken) {\n  const res = await fetch(\"\".concat(API_BASE, \"/refresh\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      refreshToken\n    })\n  });\n  if (!res.ok) throw new Error(\"Token refresh failed.\");\n  return res.json();\n}\nexport async function testApi(accessToken) {\n  const res = await fetch(\"\".concat(API_BASE, \"/test\"), {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \".concat(accessToken)\n    }\n  });\n  return res;\n}","map":{"version":3,"names":["API_BASE","login","username","password","res","fetch","concat","method","headers","body","JSON","stringify","ok","Error","json","register","refreshToken","testApi","accessToken","Authorization"],"sources":["/Users/cristinadobre/Legacy/tickadoo-task/src/authApi.ts"],"sourcesContent":["const API_BASE = \"https://task.tickadoo.com/api/task\";\n\nexport async function login(username: string, password: string) {\n    const res = await fetch(`${API_BASE}/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n    });\n    if (!res.ok) throw new Error(\"Authentication failed.\");\n    return res.json();\n}\n\nexport async function register(username: string, password: string) {\n    const res = await fetch(`${API_BASE}/register`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n    });\n    if (!res.ok) throw new Error(\"Registration failed.\");\n    return res.json();\n}\n\nexport async function refreshToken(refreshToken: string) {\n    const res = await fetch(`${API_BASE}/refresh`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ refreshToken }),\n    });\n    if (!res.ok) throw new Error(\"Token refresh failed.\");\n    return res.json();\n}\n\nexport async function testApi(accessToken: string) {\n    const res = await fetch(`${API_BASE}/test`, {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${accessToken}` },\n    });\n    return res;\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,oCAAoC;AAErD,OAAO,eAAeC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB,EAAE;EAC5D,MAAMC,GAAG,GAAG,MAAMC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,aAAU;IACzCO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,QAAQ;MAAEC;IAAS,CAAC;EAC/C,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,OAAOT,GAAG,CAACU,IAAI,CAAC,CAAC;AACrB;AAEA,OAAO,eAAeC,QAAQA,CAACb,QAAgB,EAAEC,QAAgB,EAAE;EAC/D,MAAMC,GAAG,GAAG,MAAMC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,gBAAa;IAC5CO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,QAAQ;MAAEC;IAAS,CAAC;EAC/C,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACpD,OAAOT,GAAG,CAACU,IAAI,CAAC,CAAC;AACrB;AAEA,OAAO,eAAeE,YAAYA,CAACA,YAAoB,EAAE;EACrD,MAAMZ,GAAG,GAAG,MAAMC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,eAAY;IAC3CO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEK;IAAa,CAAC;EACzC,CAAC,CAAC;EACF,IAAI,CAACZ,GAAG,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOT,GAAG,CAACU,IAAI,CAAC,CAAC;AACrB;AAEA,OAAO,eAAeG,OAAOA,CAACC,WAAmB,EAAE;EAC/C,MAAMd,GAAG,GAAG,MAAMC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,YAAS;IACxCO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAEW,aAAa,YAAAb,MAAA,CAAYY,WAAW;IAAG;EACtD,CAAC,CAAC;EACF,OAAOd,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}